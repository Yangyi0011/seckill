package router

import (
	"github.com/gin-gonic/gin"
	"github.com/swaggo/files"       // swagger embed files
	"github.com/swaggo/gin-swagger" // gin-swagger middleware
	"seckill/handler/user"
	"seckill/middleware"

	// swagger 文档生成在本项目中的目录，必须导入这个目录文档才能正常显示
	_ "seckill/docs" // docs is generated by Swag CLI, you have to import it.
)

var (
	// 全局路由引擎
	myRouter *gin.Engine
)

func init() {
	myRouter = gin.Default()
}

func InitRouter() * gin.Engine{
	swaggerRouter()
	userRouter()
	return myRouter
}

func userRouter() {
	api := myRouter.Group("/api")
	{
		userGroup := api.Group("/user")
		{
			userGroup.POST("/register", user.Register)
			userGroup.POST("/login", user.Login)
			userGroup.POST("/logout", user.Logout)
		}

		testGroup := api.Group("/test")
		// 对组内的所有请求都做认证
		testGroup.Use(middleware.Auth())
		{
			testGroup.Any("")
		}
	}
}

// SwaggerRouter swagger 路由
// 文档访问地址：http://localhost:8080/swagger/index.html
// @title Gin swagger
// @version 1.0
// @description Gin swagger 示例项目
// @contact.name yangyi
// @contact.email 1024569696@qq.com
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:8080
func swaggerRouter() {
	// The url pointing to API definition
	url := ginSwagger.URL("http://localhost:8080/swagger/doc.json")
	myRouter.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler, url))
}